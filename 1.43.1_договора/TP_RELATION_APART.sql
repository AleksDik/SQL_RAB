ALTER TABLE KURS3.TP_RELATION_APART
 DROP PRIMARY KEY CASCADE;

DROP TABLE KURS3.TP_RELATION_APART CASCADE CONSTRAINTS;

CREATE TABLE KURS3.TP_RELATION_APART
(
  RELATION_ID  NUMBER                           NOT NULL,
  TP_ID        NUMBER,
  APART_ID     NUMBER,
  ACTIVE       NUMBER                           DEFAULT 1,
  LAST_CHANGE  DATE
)
TABLESPACE KURS3
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE KURS3.TP_RELATION_APART IS 'для связи паспорта с помещением';

COMMENT ON COLUMN KURS3.TP_RELATION_APART.TP_ID IS 'ид техпаспорта';

COMMENT ON COLUMN KURS3.TP_RELATION_APART.APART_ID IS 'ид помещения';

COMMENT ON COLUMN KURS3.TP_RELATION_APART.ACTIVE IS 'активный';



CREATE UNIQUE INDEX KURS3.TP_RELATION_APART_PK ON KURS3.TP_RELATION_APART
(RELATION_ID)
LOGGING
TABLESPACE KURS3
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER KURS3.INS#TGR_TP_RELATION_APART
BEFORE INSERT
ON KURS3.TP_RELATION_APART 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    if  (:New.TP_ID is null)  then
        select  SEQ_TP_RELATION_APART.NextVal into :New.RELATION_ID from  dual;
     end if; 
    :New.last_change:=sysdate;            
END ;
/


CREATE OR REPLACE TRIGGER KURS3.UPD#TGR_TP_RELATION_APART
BEFORE UPDATE
ON KURS3.TP_RELATION_APART 
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
begin
    :New.last_change:=sysdate;
END UPD#TGR_TP_RELATION_APART;
/


ALTER TABLE KURS3.TP_RELATION_APART ADD (
  CONSTRAINT TP_RELATION_APART_PK
  PRIMARY KEY
  (RELATION_ID)
  USING INDEX KURS3.TP_RELATION_APART_PK);

ALTER TABLE KURS3.TP_RELATION_APART ADD (
  CONSTRAINT TP_RELATION_APART_FK 
  FOREIGN KEY (TP_ID) 
  REFERENCES KURS3.TP_PASPORT (TP_ID));
